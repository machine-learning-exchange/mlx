# Copyright 2021 The MLX Contributors
#
# SPDX-License-Identifier: Apache-2.0
# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.api_catalog_upload_error import ApiCatalogUploadError
from swagger_server.models.base_model_ import Model
from swagger_server import util


class ApiListCatalogUploadErrors(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, errors: List[ApiCatalogUploadError] = None, total_errors: int = None):  # noqa: E501
        """ApiListCatalogUploadErrors - a model defined in Swagger

        :param errors: The errors of this ApiListCatalogUploadErrors.  # noqa: E501
        :type errors: List[ApiCatalogUploadError]
        :param total_errors: The total_errors of this ApiListCatalogUploadErrors.  # noqa: E501
        :type total_errors: int
        """
        self.swagger_types = {
            'errors': List[ApiCatalogUploadError],
            'total_errors': int
        }

        self.attribute_map = {
            'errors': 'errors',
            'total_errors': 'total_errors'
        }

        self._errors = errors
        self._total_errors = total_errors

    @classmethod
    def from_dict(cls, dikt) -> 'ApiListCatalogUploadErrors':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The apiListCatalogUploadErrors of this ApiListCatalogUploadErrors.  # noqa: E501
        :rtype: ApiListCatalogUploadErrors
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self) -> List[ApiCatalogUploadError]:
        """Gets the errors of this ApiListCatalogUploadErrors.


        :return: The errors of this ApiListCatalogUploadErrors.
        :rtype: List[ApiCatalogUploadError]
        """
        return self._errors

    @errors.setter
    def errors(self, errors: List[ApiCatalogUploadError]):
        """Sets the errors of this ApiListCatalogUploadErrors.


        :param errors: The errors of this ApiListCatalogUploadErrors.
        :type errors: List[ApiCatalogUploadError]
        """

        self._errors = errors

    @property
    def total_errors(self) -> int:
        """Gets the total_errors of this ApiListCatalogUploadErrors.


        :return: The total_errors of this ApiListCatalogUploadErrors.
        :rtype: int
        """
        return self._total_errors

    @total_errors.setter
    def total_errors(self, total_errors: int):
        """Sets the total_errors of this ApiListCatalogUploadErrors.


        :param total_errors: The total_errors of this ApiListCatalogUploadErrors.
        :type total_errors: int
        """

        self._total_errors = total_errors
