# Copyright 2021 The MLX Contributors
#
# SPDX-License-Identifier: Apache-2.0
# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ApiMetadata(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, annotations: Dict[str, str] = None, labels: Dict[str, str] = None, tags: List[str] = None):  # noqa: E501
        """ApiMetadata - a model defined in Swagger

        :param annotations: The annotations of this ApiMetadata.  # noqa: E501
        :type annotations: Dict[str, str]
        :param labels: The labels of this ApiMetadata.  # noqa: E501
        :type labels: Dict[str, str]
        :param tags: The tags of this ApiMetadata.  # noqa: E501
        :type tags: List[str]
        """
        self.swagger_types = {
            'annotations': Dict[str, str],
            'labels': Dict[str, str],
            'tags': List[str]
        }

        self.attribute_map = {
            'annotations': 'annotations',
            'labels': 'labels',
            'tags': 'tags'
        }

        self._annotations = annotations
        self._labels = labels
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt) -> 'ApiMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The apiMetadata of this ApiMetadata.  # noqa: E501
        :rtype: ApiMetadata
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotations(self) -> Dict[str, str]:
        """Gets the annotations of this ApiMetadata.


        :return: The annotations of this ApiMetadata.
        :rtype: Dict[str, str]
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations: Dict[str, str]):
        """Sets the annotations of this ApiMetadata.


        :param annotations: The annotations of this ApiMetadata.
        :type annotations: Dict[str, str]
        """

        self._annotations = annotations

    @property
    def labels(self) -> Dict[str, str]:
        """Gets the labels of this ApiMetadata.


        :return: The labels of this ApiMetadata.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels: Dict[str, str]):
        """Sets the labels of this ApiMetadata.


        :param labels: The labels of this ApiMetadata.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def tags(self) -> List[str]:
        """Gets the tags of this ApiMetadata.


        :return: The tags of this ApiMetadata.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags: List[str]):
        """Sets the tags of this ApiMetadata.


        :param tags: The tags of this ApiMetadata.
        :type tags: List[str]
        """

        self._tags = tags
