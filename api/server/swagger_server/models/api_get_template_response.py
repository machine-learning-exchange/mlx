# Copyright 2021 The MLX Contributors
#
# SPDX-License-Identifier: Apache-2.0
# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ApiGetTemplateResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, template: str = None, url: str = None):  # noqa: E501
        """ApiGetTemplateResponse - a model defined in Swagger

        :param template: The template of this ApiGetTemplateResponse.  # noqa: E501
        :type template: str
        :param url: The url of this ApiGetTemplateResponse.  # noqa: E501
        :type url: str
        """
        self.swagger_types = {
            'template': str,
            'url': str
        }

        self.attribute_map = {
            'template': 'template',
            'url': 'url'
        }

        self._template = template
        self._url = url

    @classmethod
    def from_dict(cls, dikt) -> 'ApiGetTemplateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The apiGetTemplateResponse of this ApiGetTemplateResponse.  # noqa: E501
        :rtype: ApiGetTemplateResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def template(self) -> str:
        """Gets the template of this ApiGetTemplateResponse.

        The YAML template file content  # noqa: E501

        :return: The template of this ApiGetTemplateResponse.
        :rtype: str
        """
        return self._template

    @template.setter
    def template(self, template: str):
        """Sets the template of this ApiGetTemplateResponse.

        The YAML template file content  # noqa: E501

        :param template: The template of this ApiGetTemplateResponse.
        :type template: str
        """

        self._template = template

    @property
    def url(self) -> str:
        """Gets the url of this ApiGetTemplateResponse.

        The URL to download the template text from S3 storage (Minio)  # noqa: E501

        :return: The url of this ApiGetTemplateResponse.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this ApiGetTemplateResponse.

        The URL to download the template text from S3 storage (Minio)  # noqa: E501

        :param url: The url of this ApiGetTemplateResponse.
        :type url: str
        """

        self._url = url
